{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "GenomicsDF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Transformed_human_tissue_data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "human_tissue_df_ds",
								"type": "DatasetReference"
							},
							"name": "HumanTissueData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HumanTissue_ds",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "BoneMarrowTissue"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Gene as string,",
						"          {Gene name} as string,",
						"          Tissue as string,",
						"          {Cell type} as string,",
						"          Level as string,",
						"          Reliability as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> HumanTissueData",
						"HumanTissueData filter(Tissue !='cervix' && {Cell type} == 'glandular cells') ~> BoneMarrowTissue",
						"BoneMarrowTissue aggregate(groupBy(Tissue),",
						"     {Gene name} = count({Gene name})) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['output'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/derived_column_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "adls2_csv_ds",
								"type": "DatasetReference"
							},
							"name": "geneticsData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "genetics_refined_ds",
								"type": "DatasetReference"
							},
							"name": "GeneticsRefinedData"
						}
					],
					"transformations": [
						{
							"name": "NewColumnsAdded",
							"description": "Implemented CurrentDate, HData, Columns Merging, removing Null values"
						},
						{
							"name": "SelectedColumnsOnly"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Sample name} as string,",
						"          Sex as string,",
						"          {Biosample ID} as string,",
						"          {Population code} as string,",
						"          {Population name} as string,",
						"          {Superpopulation code} as string,",
						"          {Superpopulation name} as string,",
						"          {Population elastic ID} as string,",
						"          {Data collections} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> geneticsData",
						"geneticsData derive({Id with Name} = {Biosample ID}+ \" \" + {Sample name},",
						"          {Without Null Values} = iifNull({Sample name}, Sex,{Biosample ID}),",
						"          Date = currentDate(),",
						"          HData = @({Population Code}={Population code},",
						"          {superpopulation Code}={Superpopulation code})) ~> NewColumnsAdded",
						"NewColumnsAdded select(mapColumn(",
						"          {Sample name},",
						"          Sex,",
						"          {Biosample ID},",
						"          {Population code},",
						"          {Superpopulation code},",
						"          {Population elastic ID},",
						"          Date",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectedColumnsOnly",
						"SelectedColumnsOnly sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> GeneticsRefinedData"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DerivedColumnDataFlow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Gentics Refined PL",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "derived_column_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"geneticsData": {},
									"GeneticsRefinedData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-28T07:09:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/derived_column_dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Human _Tissues_PL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Human Tissues data source",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "http_binary1_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "adls_binary_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Human Tissue Traanssformation",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Human Tissues data source",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Transformed_human_tissue_data",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"HumanTissueData": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-28T11:35:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Transformed_human_tissue_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/geneticsUseCase1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Json data to adls",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "httpjson_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "adlsjson_ds",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": {
										"value": "@concat('landing/', formatDateTime(utcNow(), 'yyyy'), '/' , formatDateTime(utcNow(), 'MM'), '/' , formatDateTime(utcNow(), 'dd'), '/' , formatDateTime(utcNow(), 'HH'), '/' , formatDateTime(utcNow(), 'mm'), '/' , formatDateTime(utcNow(), 'ss'))",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}